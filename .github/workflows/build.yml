name: build

on: [push, pull_request]

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.0.0
        with:
          scandir: "legacy"
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Run Golangci Linter
        uses: golangci/golangci-lint-action@v2
  test:
    name: Test with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Run unit tests
        run: |
          go test -race -covermode atomic -coverprofile=covprofile ./...
      - name: Install goveralls
        if: github.ref == 'refs/heads/main'
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls
      - name: Send coverage
        if: github.ref == 'refs/heads/main'
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        go: [1.14, 1.15, 1.16]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Build
        run: go build -o dist/alchemist
